{"version":3,"file":"static/js/720.95be020e.chunk.js","mappings":"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","sources":["helpers/defineTerm.js","redux/jobs/jobs-selectors.js","webpack://job-list/./src/shared/components/JobDetailedContainer/jobDetailedContainer.module.css?e727","shared/components/JobDetailedContainer/JobDetailedContainer.jsx","webpack://job-list/./src/modules/JobDetailed/PersonalActivity/personalActivity.module.css?8382","modules/JobDetailed/PersonalActivity/PersonalActivity.jsx","webpack://job-list/./src/modules/JobDetailed/TitleSalaryAndPosted/titleSalaryAndPosted.module.css?8ea4","modules/JobDetailed/TitleSalaryAndPosted/TitleSalaryAndPosted.jsx","webpack://job-list/./src/modules/JobDetailed/Benefits/benefits.module.css?17fb","modules/JobDetailed/Benefits/Benefits.jsx","webpack://job-list/./src/modules/JobDetailed/ButtonApply/buttonApply.module.css?b829","modules/JobDetailed/ButtonApply/ButtonApply.jsx","webpack://job-list/./src/modules/JobDetailed/JobImages/jobImages.module.css?a8f6","modules/JobDetailed/JobImages/JobImages.jsx","webpack://job-list/./src/modules/JobDetailed/AdditionalInfo/additionalInfo.module.css?0dd1","modules/JobDetailed/AdditionalInfo/AdditionalInfo.jsx","webpack://job-list/./src/modules/JobDetailed/Contacts/contacts.module.css?f181","modules/JobDetailed/Contacts/Contacts.jsx","modules/JobDetailed/Map/DefaultMarker/DefaultMarker.jsx","modules/JobDetailed/Map/defaultOptions.js","modules/JobDetailed/Map/defaultTheme.js","modules/JobDetailed/Map/Map.jsx","webpack://job-list/./src/modules/JobDetailed/jobDetailed.module.css?e603","modules/JobDetailed/JobDetailed.jsx","webpack://job-list/./src/pages/JobDetailedPage/ButtonBackToBoard/buttonBackToBoard.module.css?abf2","pages/JobDetailedPage/ButtonBackToBoard/ButtonBackToBoard.jsx","webpack://job-list/./src/pages/JobDetailedPage/jobDetailedPage.module.css?09f1","pages/JobDetailedPage/JobDetailedPage.jsx","shared/components/SVGCreator/SVGCreator.js","shared/hooks/useBreakpoints.js"],"sourcesContent":["const defineTerm = str => {\n  const daysCoeff = 1 / 1000 / 3600 / 24;\n  const daysFromNow = Date.now() * daysCoeff;\n  const daysFromProps = new Date(str) * daysCoeff;\n  const difference = Math.round(daysFromNow - daysFromProps);\n  const term =\n    difference < 365\n      ? `${difference} days`\n      : `${Math.round(difference / 365)} years`;\n  return term;\n};\n\nexport default defineTerm;\n","export const getAllJobs = ({ jobs }) => jobs;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"jobDetailedContainer_container__dYBih\"};","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './jobDetailedContainer.module.css';\n\nconst JobDetailedContainer = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nJobDetailedContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default memo(JobDetailedContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"general\":\"personalActivity_general__u+kdR\",\"saveToList\":\"personalActivity_saveToList__3-gn1\",\"share\":\"personalActivity_share__3ovMu\",\"saveToListIcon\":\"personalActivity_saveToListIcon__cok6y\",\"shareIcon\":\"personalActivity_shareIcon__686r4\"};","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport SVGCreator from 'shared/components/SVGCreator';\nimport useBreakpoints from 'shared/hooks/useBreakpoints';\nimport styles from './personalActivity.module.css';\n\nconst PersonalActivity = ({ id }) => {\n  const { bigger1920px } = useBreakpoints();\n  const saveToListIcon = bigger1920px ? 'bookmark' : 'star-big';\n  const saveToListIconWidth = bigger1920px ? 32 : 21;\n  const saveToListIconHeight = bigger1920px ? 32 : 20;\n  const shareIconWidth = bigger1920px ? 32 : 18;\n  const shareIconHeight = bigger1920px ? 32 : 20;\n\n  return (\n    <div className={styles.general}>\n      <div className={styles.saveToList}>\n        <div className={styles.saveToListIcon}>\n          <SVGCreator\n            iconName={saveToListIcon}\n            width={saveToListIconWidth}\n            height={saveToListIconHeight}\n          />\n        </div>\n        <span>Save to my list</span>\n      </div>\n      <div className={styles.share}>\n        <div className={styles.shareIcon}>\n          <SVGCreator\n            iconName=\"share\"\n            width={shareIconWidth}\n            height={shareIconHeight}\n          />\n        </div>\n        <span>Share</span>\n      </div>\n    </div>\n  );\n};\n\nPersonalActivity.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default memo(PersonalActivity);\n","// extracted by mini-css-extract-plugin\nexport default {\"general\":\"titleSalaryAndPosted_general__IhyLD\",\"upper\":\"titleSalaryAndPosted_upper__KWr4r\",\"lower\":\"titleSalaryAndPosted_lower__JyIak\",\"title\":\"titleSalaryAndPosted_title__FkbYs\",\"salary\":\"titleSalaryAndPosted_salary__xcmHW\",\"brutto\":\"titleSalaryAndPosted_brutto__AQsU2\",\"money\":\"titleSalaryAndPosted_money__qPhJM\",\"posted\":\"titleSalaryAndPosted_posted__l7fvg\"};","import PropTypes from 'prop-types';\nimport useBreakpoints from 'shared/hooks/useBreakpoints';\nimport defineTerm from 'helpers/defineTerm';\nimport styles from './titleSalaryAndPosted.module.css';\n\nconst TitleSalaryAndPosted = ({ title, salary, term }) => {\n  const { bigger1920px } = useBreakpoints();\n  const salaryTransformed = salary.replaceAll('k', ' 000');\n  const termTransformed = defineTerm(term);\n  const salaryElement = (\n    <div className={styles.salary}>\n      <p className={styles.brutto}>Brutto, per year</p>\n      <p className={styles.money}>&#8364; {salaryTransformed}</p>\n    </div>\n  );\n  return (\n    <div className={styles.general}>\n      <div className={styles.upper}>\n        <h2 className={styles.title}>{title}</h2>\n        {bigger1920px && salaryElement}\n      </div>\n      <div className={styles.lower}>\n        <p className={styles.posted}>Posted {termTransformed} ago</p>\n        {!bigger1920px && salaryElement}\n      </div>\n    </div>\n  );\n};\n\nTitleSalaryAndPosted.defaultProps = {\n  salary: '10k-20k',\n};\n\nTitleSalaryAndPosted.propTypes = {\n  title: PropTypes.string.isRequired,\n  salary: PropTypes.string.isRequired,\n  term: PropTypes.string.isRequired,\n};\n\nexport default TitleSalaryAndPosted;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"benefits_list__HdqPe\",\"item\":\"benefits_item__54UFr\"};","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './benefits.module.css';\n\nconst Benefits = ({ items }) => {\n  const elements = items.map((item, idx) => (\n    <li className={styles.item} key={`${item}-${idx}`}>\n      {item}\n    </li>\n  ));\n  return <ul className={styles.list}>{elements}</ul>;\n};\n\nBenefits.defaultProps = {\n  items: [],\n};\n\nBenefits.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default memo(Benefits);\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"buttonApply_btn__XXbeY\"};","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './buttonApply.module.css';\n\nconst ButtonApply = ({ text, type }) => {\n  return (\n    <button className={styles.btn} type={type}>\n      {text}\n    </button>\n  );\n};\n\nButtonApply.defaultProps = {\n  type: 'button',\n};\n\nButtonApply.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default memo(ButtonApply);\n","// extracted by mini-css-extract-plugin\nexport default {\"general\":\"jobImages_general__7ioR6\",\"subheader\":\"jobImages_subheader__HYYhZ\",\"list\":\"jobImages_list__wPrRV\",\"item\":\"jobImages_item__7BV11\"};","import PropTypes from 'prop-types';\nimport styles from './jobImages.module.css';\n\nconst JobImages = ({ images, alt }) => {\n  const elements = images.map((image, idx) => (\n    <li key={`${image}-${idx}`}>\n      <img\n        className={styles.item}\n        src={image}\n        alt={alt}\n        width={209}\n        height={115}\n      />\n    </li>\n  ));\n  return (\n    <div className={styles.general}>\n      <h3 className={styles.subheader}>Attached Images</h3>\n      <ul className={styles.list}>{elements}</ul>\n    </div>\n  );\n};\n\nJobImages.defaultProps = {\n  images: [],\n};\n\nJobImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nexport default JobImages;\n","// extracted by mini-css-extract-plugin\nexport default {\"general\":\"additionalInfo_general__3Vglx\",\"header\":\"additionalInfo_header__AwydE\",\"subheader\":\"additionalInfo_subheader__Xwpfl\",\"type\":\"additionalInfo_type__2XJyt\",\"benefit\":\"additionalInfo_benefit__-F0v+\",\"typeList\":\"additionalInfo_typeList__inbh3\",\"benefitList\":\"additionalInfo_benefitList__2nPsy\"};","import PropTypes from 'prop-types';\nimport styles from './additionalInfo.module.css';\n\nconst AdditionalInfo = ({ benefits, employmentTypes }) => {\n  const benefitsElements = benefits.map((benefit, idx) => (\n    <li key={`${benefit}-${idx}`}>\n      <p className={styles.benefit}>{benefit}</p>\n    </li>\n  ));\n  const typesElements = employmentTypes.map((type, idx) => (\n    <li key={`${type}-${idx}`}>\n      <p className={styles.type}>{type}</p>\n    </li>\n  ));\n\n  return (\n    <div className={styles.general}>\n      <h3 className={styles.header}>Additional info</h3>\n      <h4 className={styles.subheader}>Employment type</h4>\n      <ul className={styles.typeList}>{typesElements}</ul>\n      <h4 className={styles.subheader}>Benefits</h4>\n      <ul className={styles.benefitList}>{benefitsElements}</ul>\n    </div>\n  );\n};\n\nAdditionalInfo.defaultProps = {\n  benefits: [],\n  employmentTypes: [],\n};\n\nAdditionalInfo.propTypes = {\n  benefits: PropTypes.arrayOf(PropTypes.string).isRequired,\n  employmentTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default AdditionalInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"general\":\"contacts_general__3FcOP\",\"department\":\"contacts_department__j7ARv\",\"address\":\"contacts_address__fxItv\",\"phone\":\"contacts_phone__1M6M9\",\"location\":\"contacts_location__EUjUi\",\"addressText\":\"contacts_addressText__BComL\"};","import PropTypes from 'prop-types';\nimport SVGCreator from 'shared/components/SVGCreator';\nimport styles from './contacts.module.css';\n\nconst Contacts = ({ name, address, email, phone }) => {\n  return (\n    <div className={styles.general}>\n      <div className={styles.department}>\n        <p>Department name.</p>\n        <p>{name}</p>\n      </div>\n      <div className={styles.address}>\n        <div className={styles.location}>\n          <SVGCreator iconName=\"location\" width={13} height={19} />\n        </div>\n        <p className={styles.addressText}>{address}</p>\n      </div>\n      <div className={styles.phone}>\n        <p>{phone}</p>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nContacts.defaultProps = {\n  name: '',\n  address: '',\n  email: '',\n  phone: '',\n};\n\nContacts.propTypes = {\n  name: PropTypes.string.isRequired,\n  address: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n\nexport default Contacts;\n","import PropTypes from 'prop-types';\nimport { Marker } from '@react-google-maps/api';\n\nconst DefaultMarker = ({ position }) => {\n  return <Marker position={position} icon={{ url: './location.svg' }} />;\n};\n\nMarker.defaultProps = {\n  position: { lat: 0, lng: 0 },\n};\n\nMarker.propTypes = {\n  position: PropTypes.exact({\n    lat: PropTypes.number,\n    lng: PropTypes.number,\n  }).isRequired,\n};\n\nexport default DefaultMarker;\n","import defaultTheme from './defaultTheme';\n\nconst defaultOptions = {\n  panControl: true,\n  zoomControl: false,\n  mapTypeControl: false,\n  scaleControl: false,\n  streetViewControl: false,\n  rotateControl: false,\n  clickableIcons: false,\n  keyboardShortcuts: false,\n  scrollwheel: false,\n  disableDoubleClickZoom: false,\n  fullscreenControl: false,\n  styles: defaultTheme,\n};\n\nexport default defaultOptions;\n","const defaultTheme = [\n  {\n    featureType: 'all',\n    elementType: 'labels.text.fill',\n    stylers: [\n      {\n        saturation: 15,\n      },\n      {\n        color: '#ffffff',\n      },\n      {\n        lightness: -38,\n      },\n    ],\n  },\n  {\n    featureType: 'all',\n    elementType: 'labels.text.stroke',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n      {\n        color: '#d8d8d8',\n      },\n      {\n        lightness: 16,\n      },\n    ],\n  },\n  {\n    featureType: 'all',\n    elementType: 'labels.icon',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'administrative',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 20,\n      },\n    ],\n  },\n  {\n    featureType: 'administrative',\n    elementType: 'geometry.stroke',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 17,\n      },\n      {\n        weight: 1.2,\n      },\n    ],\n  },\n  {\n    featureType: 'landscape',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#2A3047',\n      },\n      {\n        lightness: 20,\n      },\n    ],\n  },\n  {\n    featureType: 'landscape',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        visibility: 'on',\n      },\n      {\n        color: '#2A3047',\n      },\n    ],\n  },\n  {\n    featureType: 'landscape',\n    elementType: 'geometry.stroke',\n    stylers: [\n      {\n        color: '#ff0000',\n      },\n    ],\n  },\n  {\n    featureType: 'poi',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        lightness: 21,\n      },\n    ],\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'geometry.fill',\n    stylers: [\n      {\n        color: '#1d2131',\n      },\n      {\n        lightness: 17,\n      },\n    ],\n  },\n  {\n    featureType: 'road.highway',\n    elementType: 'geometry.stroke',\n    stylers: [\n      {\n        color: '#1d2131',\n      },\n      {\n        lightness: 29,\n      },\n      {\n        weight: 0.2,\n      },\n    ],\n  },\n  {\n    featureType: 'road.arterial',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#1d2131',\n      },\n      {\n        lightness: 18,\n      },\n    ],\n  },\n  {\n    featureType: 'road.local',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#1d2131',\n      },\n      {\n        lightness: 16,\n      },\n    ],\n  },\n  {\n    featureType: 'transit',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#1d2131',\n      },\n      {\n        lightness: 19,\n      },\n    ],\n  },\n  {\n    featureType: 'water',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#2A3047',\n      },\n      {\n        lightness: 17,\n      },\n    ],\n  },\n];\n\nexport default defaultTheme;\n","import { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport Spinner from 'shared/components/Spinner';\nimport DefaultMarker from './DefaultMarker';\nimport defaultOptions from './defaultOptions';\n\nconst Map = ({ center }) => {\n  const GOOGLE_KEY = 'AIzaSyA0Wd9ki4G0dUSCfDMgC2rqSA6WPi6SwQk';\n  const containerStyle = {\n    width: '100%',\n    height: '218px',\n    borderBottomLeftRadius: '8px',\n    borderBottomRightRadius: '8px',\n  };\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: GOOGLE_KEY,\n  });\n  // eslint-disable-next-line\n  const [map, setMap] = useState(null);\n\n  const onLoad = useCallback(\n    map => {\n      const bounds = new window.google.maps.LatLngBounds(center);\n      map.fitBounds(bounds);\n      setMap(map);\n    },\n    [center]\n  );\n\n  const onUnmount = useCallback(() => setMap(null), []);\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={3}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n      options={defaultOptions}\n    >\n      <DefaultMarker position={center} />\n    </GoogleMap>\n  ) : (\n    <Spinner />\n  );\n};\n\nMap.defaultProps = {\n  center: { lat: 0, lng: 0 },\n};\n\nMap.propTypes = {\n  center: PropTypes.exact({\n    lat: PropTypes.number,\n    lng: PropTypes.number,\n  }).isRequired,\n};\n\nexport default Map;\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"jobDetailed_description__OJlRR\",\"subheader\":\"jobDetailed_subheader__uYsIl\",\"btn\":\"jobDetailed_btn__P3xTK\",\"responsibilities\":\"jobDetailed_responsibilities__-pVgJ jobDetailed_description__OJlRR\",\"infoAndImg\":\"jobDetailed_infoAndImg__-ym-2\",\"contacts\":\"jobDetailed_contacts__9CTfR\",\"general\":\"jobDetailed_general__o6KeY\"};","import PropTypes from 'prop-types';\nimport PersonalActivity from './PersonalActivity';\nimport TitleSalaryAndPosted from './TitleSalaryAndPosted';\nimport Benefits from './Benefits';\nimport ButtonApply from './ButtonApply';\nimport JobImages from './JobImages';\nimport AdditionalInfo from './AdditionalInfo';\nimport Contacts from './Contacts';\nimport Map from './Map';\nimport useBreakpoints from 'shared/hooks/useBreakpoints';\nimport styles from './jobDetailed.module.css';\n\nconst JobDetailed = ({ job }) => {\n  const {\n    id,\n    address,\n    benefits,\n    description,\n    email,\n    employment_type,\n    location,\n    name,\n    phone,\n    pictures,\n    salary,\n    title,\n    updatedAt,\n  } = job;\n  const { lat, long } = location;\n  const center = { lat, lng: long };\n  const { bigger1920px } = useBreakpoints();\n  return (\n    <div className={styles.general}>\n      {!bigger1920px && <PersonalActivity id={id} />}\n      <TitleSalaryAndPosted title={title} salary={salary} term={updatedAt} />\n      <p className={styles.description}>{description}</p>\n      <h3 className={styles.subheader}>Resposibilities</h3>\n      <p className={styles.responsibilities}>{description}</p>\n      <h3 className={styles.subheader}>Compensation & Benefits:</h3>\n      <Benefits items={benefits} />\n      <div className={styles.btn}>\n        <ButtonApply\n          type=\"button\"\n          text={bigger1920px ? 'Apply now' : 'Upgrade'}\n        />\n      </div>\n      <div className={styles.infoAndImg}>\n        <JobImages images={pictures} alt={name} />\n        <AdditionalInfo benefits={benefits} employmentTypes={employment_type} />\n      </div>\n      <div className={styles.contacts}>\n        <Contacts name={name} address={address} email={email} phone={phone} />\n        <Map center={center} />\n      </div>\n    </div>\n  );\n};\n\nJobDetailed.defaultProps = {\n  job: {},\n};\n\nJobDetailed.propTypes = {\n  job: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    address: PropTypes.string.isRequired,\n    benefits: PropTypes.arrayOf(PropTypes.string).isRequired,\n    description: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    employment_type: PropTypes.arrayOf(PropTypes.string).isRequired,\n    location: PropTypes.exact({\n      lat: PropTypes.number.isRequired,\n      long: PropTypes.number.isRequired,\n    }).isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    pictures: PropTypes.arrayOf(PropTypes.string).isRequired,\n    salary: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    updatedAt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default JobDetailed;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"buttonBackToBoard_btn__DV2U8\",\"arrowContainer\":\"buttonBackToBoard_arrowContainer__Ud-wW\"};","import { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport SVGCreator from 'shared/components/SVGCreator';\nimport styles from './buttonBackToBoard.module.css';\n\nconst ButtonBackToBoard = ({ text }) => {\n  const navigate = useNavigate();\n  return (\n    <button className={styles.btn} type=\"button\" onClick={() => navigate(-1)}>\n      <div className={styles.arrowContainer}>\n        <SVGCreator iconName=\"backArrow\" width={10} height={18} />\n      </div>\n      {text}\n    </button>\n  );\n};\n\nButtonBackToBoard.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default ButtonBackToBoard;\n","// extracted by mini-css-extract-plugin\nexport default {\"headerContainer\":\"jobDetailedPage_headerContainer__md9Lp\",\"header\":\"jobDetailedPage_header__wZT8O\"};","import { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getAllJobs } from 'redux/jobs/jobs-selectors';\nimport useBreakpoints from 'shared/hooks/useBreakpoints';\nimport JobDetailedContainer from 'shared/components/JobDetailedContainer';\nimport JobDetailed from 'modules/JobDetailed';\nimport PersonalActivity from 'modules/JobDetailed/PersonalActivity';\nimport ButtonApply from 'modules/JobDetailed/ButtonApply';\nimport ButtonBackToBoard from './ButtonBackToBoard';\nimport styles from './jobDetailedPage.module.css';\n\nconst JobDetailedPage = () => {\n  const { id } = useParams();\n  const jobs = useSelector(getAllJobs);\n  const job = useMemo(() => jobs.find(job => job.id === id), [id, jobs]);\n  const { bigger1920px } = useBreakpoints();\n\n  return (\n    <JobDetailedContainer>\n      <div className={styles.headerContainer}>\n        <h1 className={styles.header}>Job Details</h1>\n        {bigger1920px && <PersonalActivity id={id} />}\n      </div>\n      {bigger1920px && <ButtonApply text=\"Apply now\" type=\"button\" />}\n      <JobDetailed job={job} />\n      {bigger1920px && <ButtonBackToBoard text=\"RETURN TO JOB BOARD\" />}\n    </JobDetailedContainer>\n  );\n};\n\nexport default JobDetailedPage;\n","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport sprite from '../../../assets/svg/sprite.svg';\n\nconst SVGCreator = ({ iconName, width, height }) => {\n  return (\n    <svg width={width} height={height}>\n      <use href={`${sprite}#icon-${iconName}`}></use>\n    </svg>\n  );\n};\n\nSVGCreator.defaultProps = {\n  width: 32,\n  height: 32,\n};\n\nSVGCreator.propTypes = {\n  iconName: PropTypes.string.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nexport default memo(SVGCreator);\n","import { useMediaPredicate } from 'react-media-hook';\n\nconst useBreakpoints = () => {\n  const bigger1920px = useMediaPredicate('(min-width: 1920px)');\n  return { bigger1920px };\n};\n\nexport default useBreakpoints;\n"],"names":["str","daysCoeff","daysFromNow","Date","now","daysFromProps","difference","Math","round","getAllJobs","jobs","JobDetailedContainer","children","className","styles","memo","PersonalActivity","id","bigger1920px","useBreakpoints","saveToListIcon","saveToListIconWidth","saveToListIconHeight","shareIconWidth","shareIconHeight","SVGCreator","iconName","width","height","TitleSalaryAndPosted","title","salary","term","salaryTransformed","replaceAll","termTransformed","defineTerm","salaryElement","defaultProps","Benefits","elements","items","map","item","idx","ButtonApply","text","type","JobImages","images","alt","image","src","AdditionalInfo","benefits","employmentTypes","benefitsElements","benefit","typesElements","Contacts","name","address","email","phone","Marker","position","lat","lng","PropTypes","isRequired","icon","url","panControl","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","clickableIcons","keyboardShortcuts","scrollwheel","disableDoubleClickZoom","fullscreenControl","featureType","elementType","stylers","saturation","color","lightness","visibility","weight","Map","center","isLoaded","useJsApiLoader","googleMapsApiKey","useState","setMap","onLoad","useCallback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","mapContainerStyle","borderBottomLeftRadius","borderBottomRightRadius","zoom","options","defaultOptions","Spinner","JobDetailed","job","description","employment_type","location","pictures","updatedAt","long","navigate","useNavigate","onClick","useParams","useSelector","useMemo","find","href","sprite","useMediaPredicate"],"sourceRoot":""}