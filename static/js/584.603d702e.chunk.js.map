{"version":3,"file":"static/js/584.603d702e.chunk.js","mappings":"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","sources":["helpers/defineTerm.js","shared/api/jobs-api.js","webpack://job-list/./src/shared/components/JobListContainer/jobListContainer.module.css?2d66","shared/components/JobListContainer/JobListContainer.jsx","shared/components/IconGenerator/IconGenerator.jsx","shared/api/geo-api.js","webpack://job-list/./src/modules/JobsList/JobsListItem/jobsListItem.module.css?0082","modules/JobsList/JobsListItem/JobsListItem.jsx","webpack://job-list/./src/modules/JobsList/jobsList.module.css?8e54","modules/JobsList/JobsList.jsx","webpack://job-list/./src/modules/Pagination/pagination.module.css?5f9b","modules/Pagination/Pagination.jsx","webpack://job-list/./src/pages/JobListPage/jobListPage.module.css?eb5f","pages/JobListPage/JobListPage.jsx","shared/components/SVGCreator/SVGCreator.js","shared/hooks/useBreakpoints.js"],"sourcesContent":["const defineTerm = str => {\n  const daysCoeff = 1 / 1000 / 3600 / 24;\n  const daysFromNow = Date.now() * daysCoeff;\n  const daysFromProps = new Date(str) * daysCoeff;\n  const difference = Math.round(daysFromNow - daysFromProps);\n  const term =\n    difference < 365\n      ? `${difference} days`\n      : `${Math.round(difference / 365)} years`;\n  return term;\n};\n\nexport default defineTerm;\n","import axios from 'axios';\n\nconst token = 'wm3gg940gy0xek1ld98uaizhz83c6rh2sir9f9fu';\n\nconst instance = axios.create({\n  baseURL: 'https://api.json-generator.com/templates/ZM1r0eic3XEy/data',\n  headers: {\n    Authorization: `Bearer ${token}`,\n  },\n});\n\nexport const fetchAllJobs = async () => {\n  const { data } = await instance();\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"jobListContainer_container__0k74V\"};","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './jobListContainer.module.css';\n\nconst JobListContainer = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nJobListContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default memo(JobListContainer);\n","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport SVGCreator from '../SVGCreator';\n\nconst IconGenerator = ({\n  number,\n  iconName,\n  width,\n  height,\n  iconStyle,\n  listStyle,\n}) => {\n  const elements = Array(number)\n    .fill(iconName)\n    .map((iconName, idx) => (\n      <li className={iconStyle} key={`${iconName}-${idx}`}>\n        <SVGCreator iconName={iconName} width={width} height={height} />\n      </li>\n    ));\n\n  return <ul className={listStyle}>{elements}</ul>;\n};\n\nIconGenerator.defaultProps = {\n  number: 2,\n};\n\nIconGenerator.propTypes = {\n  number: PropTypes.number.isRequired,\n  iconName: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  iconStyle: PropTypes.string.isRequired,\n  listStyle: PropTypes.string.isRequired,\n};\n\nexport default memo(IconGenerator);\n","import axios from 'axios';\n\nconst BIGDATA_KEY = 'bdc_039d5fe4d0a542fe9c38f9ad5a068b36';\n\nconst instance = axios.create({\n  baseURL: 'https://api.bigdatacloud.net/data/reverse-geocode',\n  params: {\n    key: BIGDATA_KEY,\n    localityLanguage: 'en',\n  },\n});\n\nexport const fetchCityName = async (lat, long) => {\n  const { data } = await instance(`?latitude=${lat}&longitude=${long}`);\n  return data.city || data.locality;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"upper\":\"jobsListItem_upper__W5v9x\",\"posted\":\"jobsListItem_posted__WRh-N\",\"meta\":\"jobsListItem_meta__fxBq7\",\"img\":\"jobsListItem_img__6XfI4\",\"title\":\"jobsListItem_title__Q0pN1\",\"titleText\":\"jobsListItem_titleText__m9eGp\",\"bookmark\":\"jobsListItem_bookmark__kCBI5\",\"department\":\"jobsListItem_department__LcWD6\",\"rating\":\"jobsListItem_rating__dODFX\",\"star\":\"jobsListItem_star__zpMdn\",\"info\":\"jobsListItem_info__-CCZY\",\"location\":\"jobsListItem_location__SxG1z\",\"place\":\"jobsListItem_place__I9+Uk jobsListItem_department__LcWD6\"};","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport SVGCreator from 'shared/components/SVGCreator';\nimport IconGenerator from 'shared/components/IconGenerator';\nimport { fetchCityName } from 'shared/api/geo-api';\nimport useBreakpoints from 'shared/hooks/useBreakpoints';\nimport styles from './jobsListItem.module.css';\n\nconst JobsListItem = ({\n  id,\n  picture,\n  name,\n  title,\n  latitude,\n  longitude,\n  term,\n}) => {\n  const [state, setState] = useState('');\n  const { bigger1920px } = useBreakpoints();\n\n  useEffect(() => {\n    const getCityName = async (lat, long) => {\n      try {\n        const city = await fetchCityName(lat, long);\n        setState(city);\n      } catch (error) {\n        setState(error.message);\n      }\n    };\n    getCityName(latitude, longitude);\n  }, [latitude, longitude]);\n\n  const rating = (\n    <IconGenerator\n      number={5}\n      iconName=\"star\"\n      width={bigger1920px ? 18 : 10}\n      height={bigger1920px ? 18 : 10}\n      listStyle={styles.rating}\n      iconStyle={styles.star}\n    />\n  );\n\n  return (\n    <Link to={`/jobs/${id}`}>\n      {!bigger1920px ? (\n        <div className={styles.upper}>\n          {rating}\n          <span className={styles.posted}>Posted {term} ago</span>\n        </div>\n      ) : (\n        rating\n      )}\n      <div className={styles.meta}>\n        <img\n          className={styles.img}\n          src={picture}\n          alt={name}\n          width={bigger1920px ? '85' : '66'}\n          height={bigger1920px ? '85' : '66'}\n        />\n        <div className={styles.info}>\n          <div className={styles.title}>\n            <p className={styles.titleText}>{title}</p>\n            {bigger1920px && (\n              <div className={styles.bookmark}>\n                <SVGCreator iconName=\"bookmark\" />\n              </div>\n            )}\n          </div>\n          <p>\n            <span className={styles.department}>Department name • </span>\n            <span className={styles.department}>{name}</span>\n          </p>\n          <div className={styles.location}>\n            <div>\n              <SVGCreator iconName=\"location\" width={13} height={18} />\n              <span className={styles.place}>{state}</span>\n            </div>\n            {bigger1920px && <span>Posted {term} ago</span>}\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nJobsListItem.defaultProps = {\n  latitude: 0,\n  longitude: 0,\n};\n\nJobsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  latitude: PropTypes.number.isRequired,\n  longitude: PropTypes.number.isRequired,\n  term: PropTypes.string.isRequired,\n};\n\nexport default memo(JobsListItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"jobsList_item__BB7mA\"};","import PropTypes from 'prop-types';\nimport JobsListItem from './JobsListItem';\nimport defineTerm from 'helpers/defineTerm';\nimport styles from './jobsList.module.css';\n\nconst JobsList = ({ items }) => {\n  const elements = items.map(\n    ({ id, pictures, name, title, location, updatedAt }) => {\n      const { lat, long } = location;\n      const term = defineTerm(updatedAt);\n      return (\n        <li className={styles.item} key={id}>\n          <JobsListItem\n            id={id}\n            picture={pictures[0]}\n            name={name}\n            title={title}\n            latitude={lat}\n            longitude={long}\n            term={term}\n          />\n        </li>\n      );\n    }\n  );\n  return <ul>{elements}</ul>;\n};\n\nJobsList.defaultProps = {\n  items: [],\n};\n\nJobsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      address: PropTypes.string.isRequired,\n      benefits: PropTypes.arrayOf(PropTypes.string).isRequired,\n      description: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      employment_type: PropTypes.arrayOf(PropTypes.string).isRequired,\n      location: PropTypes.exact({\n        lat: PropTypes.number.isRequired,\n        long: PropTypes.number.isRequired,\n      }).isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n      pictures: PropTypes.arrayOf(PropTypes.string).isRequired,\n      salary: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      updatedAt: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default JobsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"general\":\"pagination_general__+PuYn\",\"item\":\"pagination_item__8wzR5\",\"itemActive\":\"pagination_itemActive__6sdz9 pagination_item__8wzR5\",\"empty\":\"pagination_empty__TMEbq pagination_item__8wzR5\",\"list\":\"pagination_list__LEHPp\",\"svgLeft\":\"pagination_svgLeft__6Msu0\",\"svgRight\":\"pagination_svgRight__uA2by pagination_svgLeft__6Msu0\"};","import { memo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport SVGCreator from 'shared/components/SVGCreator';\nimport styles from './pagination.module.css';\n\nconst Pagination = ({ total, onClick }) => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [startWith, setStartWith] = useState(0);\n  const number = total >= 7 ? 7 : total;\n  const rest = total - number;\n  const currentCoeff = 5 * startWith;\n\n  const changePortion = useCallback(\n    idx => {\n      setCurrentPage(idx);\n      onClick(idx);\n    },\n    [onClick]\n  );\n\n  const changeList = useCallback(\n    direction => {\n      setStartWith(prevState => {\n        if (direction === 'back') {\n          changePortion((prevState - 1) * 5);\n          return prevState - 1;\n        }\n        if (prevState >= total / 5) {\n          return prevState;\n        }\n        changePortion((prevState + 1) * 5);\n        return prevState + 1;\n      });\n    },\n    [changePortion, total]\n  );\n\n  const setLastPage = useCallback(() => {\n    changePortion(total - 1);\n    setStartWith(total / 5 - 1);\n  }, [changePortion, total]);\n  const elements = Array(\n    !rest ? number : total - currentCoeff > 5 ? 5 : total - currentCoeff\n  )\n    .fill(0)\n    .map((_, idx) => (\n      <li\n        className={\n          currentPage === idx + currentCoeff ? styles.itemActive : styles.item\n        }\n        key={`key-${idx}`}\n        onClick={() => changePortion(idx + currentCoeff)}\n      >\n        {idx + 1 + currentCoeff}\n      </li>\n    ));\n\n  return (\n    <div className={styles.general}>\n      {Boolean(rest) && Boolean(startWith) && (\n        <div className={styles.svgLeft} onClick={() => changeList('back')}>\n          <SVGCreator iconName=\"arrowLeft\" width={18} height={18} />\n        </div>\n      )}\n      <ul className={styles.list}>\n        {elements}\n        {Boolean(rest) &&\n          startWith + 1 < total / 5 &&\n          currentPage !== total - 1 && (\n            <li\n              className={styles.empty}\n              onClick={() => changeList('forward')}\n            ></li>\n          )}\n        {Boolean(rest) &&\n          startWith + 1 < total / 5 &&\n          currentPage !== total - 1 && (\n            <li\n              className={\n                currentPage === total - 1 ? styles.itemActive : styles.item\n              }\n              onClick={setLastPage}\n            >\n              {total}\n            </li>\n          )}\n      </ul>\n      {Boolean(rest) && startWith + 1 < total / 5 && currentPage !== total - 1 && (\n        <div className={styles.svgRight} onClick={() => changeList('forward')}>\n          <SVGCreator iconName=\"arrowRight\" width={18} height={18} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nPagination.defaultProps = {\n  total: 0,\n  onClick: () => {},\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default memo(Pagination);\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"jobListPage_error__VRkSL\"};","import { useState, useEffect, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchAllJobs } from 'shared/api/jobs-api';\nimport { addJobs } from 'redux/jobs/jobs-actions';\nimport JobListContainer from 'shared/components/JobListContainer';\nimport JobsList from 'modules/JobsList';\nimport Pagination from 'modules/Pagination';\nimport Spinner from 'shared/components/Spinner';\nimport styles from './jobListPage.module.css';\n\nconst initialFetchState = {\n  jobs: [],\n  loading: false,\n  error: null,\n};\n\nconst initialPaginationState = {\n  portionSize: 2,\n  currentPortion: 0,\n  totalPortions: 0,\n};\n\nconst JobListPage = () => {\n  const [state, setState] = useState(initialFetchState);\n  const [pagination, setPagination] = useState(initialPaginationState);\n  const { jobs, loading, error } = state;\n  const { portionSize, currentPortion, totalPortions } = pagination;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const getJobs = async () => {\n      setState(prevState => ({ ...prevState, loading: true }));\n      try {\n        const jobs = await fetchAllJobs();\n        setState(prevState => ({ ...prevState, jobs, loading: false }));\n        dispatch(addJobs(jobs));\n        const length = jobs.length;\n        const totalPortions = Math.ceil(length / portionSize);\n        setPagination(prevState => ({ ...prevState, totalPortions }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          error: error.message,\n        }));\n      }\n    };\n    getJobs();\n  }, [dispatch, portionSize]);\n\n  const isJobs = jobs.length > 0;\n  const currentJobs = useMemo(\n    () =>\n      jobs.slice(\n        currentPortion * portionSize,\n        portionSize * (currentPortion + 1)\n      ),\n    [currentPortion, jobs, portionSize]\n  );\n\n  const setCurrentPortion = currentPortion =>\n    setPagination(prevState => ({ ...prevState, currentPortion }));\n\n  return (\n    <JobListContainer>\n      {loading && <Spinner />}\n      {error && <p className={styles.error}>{error}</p>}\n      {!error && isJobs && <JobsList items={currentJobs} />}\n      {!error && isJobs && (\n        <Pagination total={totalPortions} onClick={setCurrentPortion} />\n      )}\n    </JobListContainer>\n  );\n};\n\nexport default JobListPage;\n","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport sprite from '../../../assets/svg/sprite.svg';\n\nconst SVGCreator = ({ iconName, width, height }) => {\n  return (\n    <svg width={width} height={height}>\n      <use href={`${sprite}#icon-${iconName}`}></use>\n    </svg>\n  );\n};\n\nSVGCreator.defaultProps = {\n  width: 32,\n  height: 32,\n};\n\nSVGCreator.propTypes = {\n  iconName: PropTypes.string.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nexport default memo(SVGCreator);\n","import { useMediaPredicate } from 'react-media-hook';\n\nconst useBreakpoints = () => {\n  const bigger1920px = useMediaPredicate('(min-width: 1920px)');\n  return { bigger1920px };\n};\n\nexport default useBreakpoints;\n"],"names":["str","daysCoeff","daysFromNow","Date","now","daysFromProps","difference","Math","round","instance","axios","baseURL","headers","Authorization","fetchAllJobs","data","JobListContainer","children","className","styles","memo","IconGenerator","number","iconName","width","height","iconStyle","listStyle","elements","Array","fill","map","idx","SVGCreator","defaultProps","params","key","localityLanguage","fetchCityName","lat","long","city","locality","JobsListItem","id","picture","name","title","latitude","longitude","term","useState","state","setState","bigger1920px","useBreakpoints","useEffect","getCityName","message","rating","to","src","alt","JobsList","items","pictures","location","updatedAt","defineTerm","Pagination","total","onClick","currentPage","setCurrentPage","startWith","setStartWith","rest","currentCoeff","changePortion","useCallback","changeList","direction","prevState","setLastPage","_","Boolean","initialFetchState","jobs","loading","error","initialPaginationState","portionSize","currentPortion","totalPortions","pagination","setPagination","dispatch","useDispatch","getJobs","addJobs","length","ceil","isJobs","currentJobs","useMemo","slice","Spinner","href","sprite","useMediaPredicate"],"sourceRoot":""}